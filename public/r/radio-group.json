{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "radio-group",
  "type": "registry:ui",
  "dependencies": [
    "@phosphor-icons/react",
    "@radix-ui/react-radio-group"
  ],
  "files": [
    {
      "path": "src/components/radio-group.tsx",
      "content": "\"use client\";\n\nimport { CircleIcon } from \"@phosphor-icons/react/dist/ssr/Circle\";\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { createContext, useContext } from \"react\";\nimport { cn } from \"@/lib/utils\";\n\nconst radioVariants = cva(\n  \"peer aspect-square shrink-0 rounded-full border border-input text-primary-foreground outline-hidden transition-[color,box-shadow] hover:not-disabled:border-primary focus-visible:ring-primary-hover/20 disabled:cursor-not-allowed disabled:opacity-50 aria-invalid:border-danger aria-invalid:outline-danger data-[state=checked]:border-primary data-[state=checked]:bg-primary dark:bg-input/30\",\n  {\n    variants: {\n      size: {\n        sm: \"size-4 focus-visible:ring-1 [&_svg]:size-2\",\n        md: \"size-6 focus-visible:ring-2 [&_svg]:size-3\",\n      },\n    },\n    defaultVariants: {\n      size: \"md\",\n    },\n  },\n);\n\nconst RadioGroupContext = createContext<VariantProps<typeof radioVariants>>({\n  size: \"md\",\n});\n\nfunction RadioGroup({\n  children,\n  className,\n  size,\n  ...props\n}: React.ComponentProps<typeof RadioGroupPrimitive.Root> &\n  VariantProps<typeof radioVariants>) {\n  return (\n    <RadioGroupPrimitive.Root\n      data-slot=\"radio-group\"\n      className={cn(\"grid gap-3\", className)}\n      {...props}\n    >\n      <RadioGroupContext.Provider value={{ size }}>\n        {children}\n      </RadioGroupContext.Provider>\n    </RadioGroupPrimitive.Root>\n  );\n}\n\nfunction RadioGroupItem({\n  className,\n  size: sizeProp,\n  ...props\n}: React.ComponentProps<typeof RadioGroupPrimitive.Item> &\n  VariantProps<typeof radioVariants>) {\n  const context = useContext(RadioGroupContext);\n  const size = sizeProp ?? context.size;\n\n  return (\n    <RadioGroupPrimitive.Item\n      data-slot=\"radio-group-item\"\n      className={cn(radioVariants({ size }), className)}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator\n        data-slot=\"radio-group-indicator\"\n        className=\"relative flex items-center justify-center\"\n      >\n        <CircleIcon\n          weight=\"fill\"\n          className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-primary-foreground\"\n        />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  );\n}\n\nexport { RadioGroup, RadioGroupItem };\n",
      "type": "registry:ui",
      "target": "components/radio-group.tsx"
    }
  ]
}