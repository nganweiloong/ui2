{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "button-group",
  "type": "registry:ui",
  "registryDependencies": [
    "https://raw.githubusercontent.com/nganweiloong/ui2/refs/heads/main/public/r/button.json"
  ],
  "files": [
    {
      "path": "src/components/button-group.tsx",
      "content": "\"use client\";\n\nimport type { VariantProps } from \"class-variance-authority\";\nimport { createContext, useContext } from \"react\";\nimport { Button, buttonVariants } from \"@/components/button\";\nimport { cn } from \"@/lib/utils\";\n\nconst ButtonGroupContext = createContext<VariantProps<typeof buttonVariants>>(\n  {},\n);\n\nfunction ButtonGroup({\n  children,\n  className,\n  size,\n  variant = \"secondary\",\n  ...props\n}: React.ComponentProps<\"div\"> & VariantProps<typeof buttonVariants>) {\n  return (\n    <div\n      data-slot=\"button-group\"\n      className={cn(\n        \"isolate inline-flex rounded-lg\",\n        variant !== \"ghost\" && \"shadow-xs\",\n        variant === \"dashed\" ? \"space-x-px\" : \"-space-x-px\",\n        className,\n      )}\n      {...props}\n    >\n      <ButtonGroupContext.Provider value={{ variant, size }}>\n        {children}\n      </ButtonGroupContext.Provider>\n    </div>\n  );\n}\n\nfunction ButtonGroupItem({\n  className,\n  variant: variantProp,\n  ...props\n}: Omit<React.ComponentProps<typeof Button>, \"size\">) {\n  const context = useContext(ButtonGroupContext);\n  const variant = context.variant || variantProp;\n\n  return (\n    <Button\n      data-slot=\"button-group-item\"\n      data-variant={variant}\n      data-size={context.size}\n      className={cn(\n        \"relative shadow-none focus-visible:z-10\",\n        variant !== \"ghost\" &&\n          \"rounded-none first:rounded-l-lg last:rounded-r-lg\",\n        className,\n      )}\n      variant={variant}\n      size={context.size}\n      {...props}\n    />\n  );\n}\n\nexport { ButtonGroup, ButtonGroupItem };\n",
      "type": "registry:ui",
      "target": "components/button-group.tsx"
    }
  ]
}