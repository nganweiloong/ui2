{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "chip",
  "type": "registry:ui",
  "dependencies": [
    "@phosphor-icons/react"
  ],
  "files": [
    {
      "path": "src/components/chip.tsx",
      "content": "\"use client\";\n\nimport type { Icon } from \"@phosphor-icons/react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { createContext, useContext } from \"react\";\nimport { cn } from \"@/lib/utils\";\n\nconst chipVariants = cva(\n  \"inline-flex items-center gap-1 rounded-lg border px-2 text-sm leading-none transition-colors select-none has-[[data-slot=chip-action]]:pr-1 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>svg]:size-4\",\n  {\n    variants: {\n      variant: {\n        input: \"border-neutral-300 bg-neutral-50 text-muted-foreground\",\n        emerald:\n          \"border-emerald-500 text-emerald-700 hover:bg-emerald-50 aria-selected:border-emerald-700 aria-selected:bg-emerald-100\",\n        pizazz:\n          \"border-pizazz-500 text-pizazz-700 hover:bg-pizazz-50 aria-selected:border-pizazz-700 aria-selected:bg-pizazz-100\",\n        violet:\n          \"border-electric-500 text-electric-700 hover:bg-electric-50 aria-selected:border-electric-700 aria-selected:bg-electric-100\",\n        picton:\n          \"border-picton-500 text-picton-700 hover:bg-picton-50 aria-selected:border-picton-700 aria-selected:bg-picton-100\",\n        azalea:\n          \"border-azalea-500 text-azalea-700 hover:bg-azalea-50 aria-selected:border-azalea-700 aria-selected:bg-azalea-100\",\n        carnelian:\n          \"border-carnelian-500 text-carnelian-700 hover:bg-carnelian-50 aria-selected:border-carnelian-700 aria-selected:bg-carnelian-100\",\n      },\n      size: {\n        sm: \"h-5\",\n        md: \"h-6\",\n        lg: \"h-8\",\n      },\n    },\n    defaultVariants: {\n      variant: \"input\",\n      size: \"md\",\n    },\n  },\n);\n\nconst ChipContext = createContext<\n  VariantProps<typeof chipVariants> & { disabled?: boolean }\n>({\n  variant: \"input\",\n  size: \"md\",\n});\n\nfunction Chip({\n  children,\n  className,\n  disabled,\n  selected,\n  size,\n  variant,\n  ...props\n}: React.ComponentProps<\"div\"> &\n  VariantProps<typeof chipVariants> & {\n    selected?: boolean;\n    disabled?: boolean;\n  }) {\n  return (\n    <div\n      data-slot=\"chip\"\n      className={cn(chipVariants({ variant, size }), className)}\n      aria-disabled={disabled}\n      aria-selected={selected}\n      {...props}\n    >\n      <ChipContext.Provider value={{ variant, size, disabled }}>\n        {children}\n      </ChipContext.Provider>\n    </div>\n  );\n}\n\nfunction ChipAction({\n  className,\n  ...props\n}: React.ComponentProps<\"button\"> & { children?: React.ReactElement<Icon> }) {\n  const { disabled, variant } = useContext(ChipContext);\n\n  return (\n    <button\n      data-slot=\"chip-action\"\n      className={cn(\n        \"inline-flex size-5 items-center justify-center rounded-full p-[2px] only:ml-1 focus-visible:outline-none disabled:pointer-events-none disabled:opacity-50\",\n        {\n          \"hover:bg-neutral-100 focus-visible:bg-neutral-100 active:bg-neutral-200\":\n            variant === \"input\",\n          \"hover:bg-emerald-100 focus-visible:bg-emerald-100 active:bg-emerald-200\":\n            variant === \"emerald\",\n          \"hover:bg-pizazz-100 focus-visible:bg-pizazz-100 active:bg-pizazz-200\":\n            variant === \"pizazz\",\n          \"hover:bg-electric-100 focus-visible:bg-electric-100 active:bg-electric-200\":\n            variant === \"violet\",\n          \"hover:bg-picton-100 focus-visible:bg-picton-100 active:bg-picton-200\":\n            variant === \"picton\",\n          \"hover:bg-azalea-100 focus-visible:bg-azalea-100 active:bg-azalea-200\":\n            variant === \"azalea\",\n          \"hover:bg-carnelian-100 focus-visible:bg-carnelian-100 active:bg-carnelian-200\":\n            variant === \"carnelian\",\n        },\n        className,\n      )}\n      disabled={props.disabled ?? disabled}\n      {...props}\n    />\n  );\n}\n\nexport { Chip, ChipAction, chipVariants };\n",
      "type": "registry:ui",
      "target": "components/chip.tsx"
    }
  ]
}