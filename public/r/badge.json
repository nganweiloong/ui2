{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "badge",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-slot"
  ],
  "files": [
    {
      "path": "src/components/badge.tsx",
      "content": "import { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { cn } from \"@/lib/utils\";\n\nconst badgeVariants = cva(\n  \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive inline-flex w-fit shrink-0 items-center justify-center gap-1 overflow-hidden rounded-md border px-2 py-0.5 text-xs leading-none font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring focus-visible:ring-ring focus-visible:ring-offset-1 [&>svg]:pointer-events-none\",\n  {\n    variants: {\n      variant: {\n        bold: \"border-transparent text-accent-foreground\",\n        subtle: \"\",\n      },\n      color: {\n        picton: \"\",\n        emerald: \"\",\n        pizazz: \"\",\n        electric: \"\",\n        azalea: \"\",\n        carnelian: \"\",\n        info: \"border-info-border bg-info-subtle text-info-foreground [a&]:hover:bg-info-border/40\",\n        warning:\n          \"border-warning-border bg-warning-subtle text-warning-foreground [a&]:hover:bg-warning-border/40\",\n        success:\n          \"border-success-border bg-success-subtle text-success-foreground [a&]:hover:bg-success-border/40\",\n        danger:\n          \"border-monza-300 bg-monza-50 text-monza-700 [a&]:hover:bg-monza-100\",\n      },\n      size: {\n        sm: \"px-2 py-0.25 text-xs [&>svg]:size-3\",\n        md: \"px-2 py-0.5 text-sm [&>svg]:size-3\",\n        lg: \"px-2 py-1 text-sm [&>svg]:size-4\",\n      },\n    },\n    compoundVariants: [\n      {\n        variant: \"bold\",\n        color: \"picton\",\n        className: \"bg-picton-500 [a&]:hover:bg-picton-500/90\",\n      },\n      {\n        variant: \"bold\",\n        color: \"emerald\",\n        className: \"bg-emerald-500 [a&]:hover:bg-emerald-500/90\",\n      },\n      {\n        variant: \"bold\",\n        color: \"pizazz\",\n        className: \"bg-pizazz-500 [a&]:hover:bg-pizazz-500/90\",\n      },\n      {\n        variant: \"bold\",\n        color: \"electric\",\n        className: \"bg-electric-500 [a&]:hover:bg-electric-500/90\",\n      },\n      {\n        variant: \"bold\",\n        color: \"azalea\",\n        className: \"bg-azalea-500 [a&]:hover:bg-azalea-500/90\",\n      },\n      {\n        variant: \"bold\",\n        color: \"carnelian\",\n        className: \"bg-carnelian-500 [a&]:hover:bg-carnelian-500/90\",\n      },\n      {\n        variant: \"subtle\",\n        color: \"picton\",\n        className:\n          \"border-picton-300 bg-picton-50 text-picton-700 [a&]:hover:bg-picton-100\",\n      },\n      {\n        variant: \"subtle\",\n        color: \"emerald\",\n        className:\n          \"border-emerald-300 bg-emerald-50 text-emerald-700 [a&]:hover:bg-emerald-100\",\n      },\n      {\n        variant: \"subtle\",\n        color: \"pizazz\",\n        className:\n          \"border-pizazz-300 bg-pizazz-50 text-pizazz-700 [a&]:hover:bg-pizazz-100\",\n      },\n      {\n        variant: \"subtle\",\n        color: \"electric\",\n        className:\n          \"border-electric-300 bg-electric-50 text-electric-700 [a&]:hover:bg-electric-100\",\n      },\n      {\n        variant: \"subtle\",\n        color: \"azalea\",\n        className:\n          \"border-azalea-300 bg-azalea-50 text-azalea-700 [a&]:hover:bg-azalea-100\",\n      },\n      {\n        variant: \"subtle\",\n        color: \"carnelian\",\n        className:\n          \"border-carnelian-300 bg-carnelian-50 text-carnelian-700 [a&]:hover:bg-carnelian-100\",\n      },\n    ],\n    defaultVariants: {\n      variant: \"bold\",\n      color: \"picton\",\n      size: \"sm\",\n    },\n  },\n);\n\nfunction Badge({\n  asChild = false,\n  className,\n  color,\n  size,\n  variant,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\";\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant, color, size }), className)}\n      {...props}\n    />\n  );\n}\n\nexport { Badge, badgeVariants };\n",
      "type": "registry:ui",
      "target": "components/badge.tsx"
    }
  ]
}